// BIT-MAGIC
// Two odd occurring numbers 

// Given a list of numbers where each number appears for an even number of times except two numbers
// find those two numbers.

// Ex -> {3,7,4,7,5,4,5,5}
// Ans -> {3,5} 

// Ex -> {3,4,3,4,5,4,4,6,7,7}
// Ans -> {5,6}


#include<bits/stdc++.h>
using namespace std;
vector<int> find_two_odd_occuring(vector<int>v)
{
    int sizze = v.size();
    int xor_of_array = v[0];
    for(int i=1;i<sizze;i++)
    {
        xor_of_array = xor_of_array ^ v[i];
    }
    int k = (xor_of_array & (~(xor_of_array - 1)));
    int first_number = 0;
    int second_number = 0;
    for(int i=0;i<sizze;i++)
    {
        if(k & v[i])
        {
            first_number = first_number ^ v[i];
        }
        else
        {
            second_number = second_number ^ v[i];
        }
    }
    vector<int>final;
    final.push_back(first_number);
    final.push_back(second_number);
    return final;
}
int main()
{
    int n;
    cin>>n;
    vector<int>v(n,0);
    for(int i=0;i<n;i++)
    {
        cin>>v[i];
    }
    vector<int>ans = find_two_odd_occuring(v);
    for(int i=0;i<ans.size();i++)
    {
        cout<<ans[i]<<" ";
    }
    cout<<"\n";
    return 0;
}
